import torch
import torch.optim as optim
import torch.nn as nn

from UnetGenerator import UnetGenerator
from Discriminator import Discriminator

device = ("cuda:0" if torch.cuda.is_available() else "cpu")

# Create models

# learns to convert an image from
# domain A to domain B
generator_AB = UnetGenerator()
generator_AB.to(device)

# learns to convert an image from
# domain B to domain A
generator_BA = UnetGenerator()
generator_BA.to(device)

# learns the difference between real
# images from domain A and fake images
# generated by generator_BA
discriminator_A = Discriminator()
discriminator_A.to(device)

# learns the difference between real
# images from domain B and fake images
# generated by generator_AB
discriminator_B = Discriminator()
discriminator_B.to(device)

# Create loss function

criterion = nn.MSELoss()







